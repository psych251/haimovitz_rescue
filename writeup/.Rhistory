### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location
pilot_data <- pilot_data[-c(1, 2), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data
#### Data exclusion:Filter out all the responses that have empty open responses or survey respondents that have no children
filtered_pilot <- pilot_data %>%
filter(Parent == 'Yes')  %>%
filter(Open_1 != ''|Open_2 != ''|Open_3 != '')
### dataframe with only the open response questions
open_responses <- filtered_pilot %>%
select(ResponseId, Open_1, Open_2, Open_3)
write.csv(open_responses, "../data/pilot_open_responses.csv")
### dataframe without the open response questions
survey_responses <- filtered_pilot %>%
select(-Open_1, -Open_2, -Open_3)
write.csv(survey_responses, "../data/pilot_survey_responses.csv")
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location
pilot_data <- pilot_data[-c(1, 2), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data
View(pilot_data)
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- filter(StartDate >= as.Date("2023-11-17"))
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- filter(pilot_data, StartDate >= as.Date("2023-11-17"))
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- filter(pilot_data, as.Date(StartDate, format = "%Y-%m-%d") >= as.Date("2023-11-17"))
pilot_data <- pilot_data[-c(1, 2), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data
View(pilot_data)
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data |>
filter(StartDate >= as.Date("2021-11-18")) |>
pilot_data <- pilot_data[-c(1, 2), ] |>
pilot_data <- pilot_data[, -c(3:8)] |>
pilot_data <- pilot_data[, -c(4:11)]
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data %>%
filter(StartDate >= as.Date("2021-11-18")) %>%
pilot_data <- pilot_data[-c(1, 2), ] %>%
pilot_data <- pilot_data[, -c(3:8)] %>%
pilot_data <- pilot_data[, -c(4:11)]
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data %>%
filter(StartDate >= as.Date("2021-11-18")) %>%
pilot_data[-c(1, 2), ] %>%
pilot_data[, -c(3:8)] %>%
pilot_data[, -c(4:11)]
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data %>%
filter(StartDate >= as.Date("2023-11-17")) %>%
pilot_data[-c(1, 2), ] %>%
pilot_data[, -c(3:8)] %>%
pilot_data[, -c(4:11)]
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:21), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data
View(pilot_data)
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data
#### Data exclusion:Filter out all the responses that have empty open responses or survey respondents that have no children
filtered_pilot <- pilot_data %>%
filter(Parent == 'Yes')  %>%
filter(Open_1 != ''|Open_2 != ''|Open_3 != '')
### dataframe with only the open response questions
open_responses <- filtered_pilot %>%
select(ResponseId, Open_1, Open_2, Open_3)
write.csv(open_responses, "../data/pilotB_open_responses.csv")
### dataframe without the open response questions
survey_responses <- filtered_pilot %>%
select(-Open_1, -Open_2, -Open_3)
write.csv(survey_responses, "../data/pilotB_survey_responses.csv")
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data <- pilot_data[, -c(1:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data <- pilot_data[, -c(1:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data
#pilot_data <- pilot_data[, -c(3:8)]
#pilot_data <- pilot_data[, -c(4:11)]
pilot_data
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data <- pilot_data[, -c(1:2)]
pilot_data
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data <- pilot_data[, -c(1:2)]
#label as either debilitating or enhancing condition
pilot_data <- pilot_data %>%
mutate(Condition = ifelse(is.na(Enhancing_1) | Enhancing_1 == "", "Debilitating", "Enhancing"))
pilot_data
#### Data exclusion:Filter out all the responses that have empty open responses or survey respondents that have no children
filtered_pilot <- pilot_data %>%
filter(Parent == 'Yes')  %>%
filter(Open_1 != ''|Open_2 != ''|Open_3 != '')
#label as either debilitating or enhancing condition
filtered_pilot <- filtered_pilot %>%
mutate(Condition = ifelse(is.na(Enhancing_1) | Enhancing_1 == "", "Debilitating", "Enhancing"))
### dataframe with only the open response questions
open_responses <- filtered_pilot %>%
select(ResponseId, Open_1, Open_2, Open_3)
write.csv(open_responses, "../data/pilotB_open_responses.csv")
### dataframe without the open response questions
survey_responses <- filtered_pilot %>%
select(-Open_1, -Open_2, -Open_3)
write.csv(survey_responses, "../data/pilotB_survey_responses.csv")
View(filtered_pilot)
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data <- pilot_data[, -c(1:2)]
View(pilot_data)
#### Data exclusion:Filter out all the responses that have empty open responses or survey respondents that have no children
filtered_pilot <- pilot_data %>%
filter(Parent == 'Yes')  %>%
filter(Open_1 != ''|Open_2 != ''|Open_3 != '')
#label as either debilitating or enhancing condition
filtered_pilot <- filtered_pilot %>%
mutate(Condition = ifelse(is.na(Enhancing_1) | Enhancing_1 == "", "Debilitating", "Enhancing"))
### dataframe with only the open response questions
open_responses <- filtered_pilot %>%
select(ResponseId, Open_1, Open_2, Open_3)
write.csv(open_responses, "../data/pilotB_open_responses.csv")
### dataframe without the open response questions
survey_responses <- filtered_pilot %>%
select(-Open_1, -Open_2, -Open_3)
write.csv(survey_responses, "../data/pilotB_survey_responses.csv")
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data <- pilot_data[, -c(1:2)]
#### Data exclusion:Filter out all the responses that have empty open responses or survey respondents that have no children
filtered_pilot <- pilot_data %>%
filter(Parent == 'Yes')  %>%
filter(Open_1 != ''|Open_2 != ''|Open_3 != '')
#label as either debilitating or enhancing condition
filtered_pilot <- filtered_pilot %>%
mutate(Condition = ifelse(is.na(Enhancing_1) | Enhancing_1 == "", "Debilitating", "Enhancing"))
### dataframe with only the open response questions
open_responses <- filtered_pilot %>%
select(ResponseId, Open_1, Open_2, Open_3)
write.csv(open_responses, "../data/pilotB_open_responses.csv")
### dataframe without the open response questions
survey_responses <- filtered_pilot %>%
select(-Open_1, -Open_2, -Open_3)
write.csv(survey_responses, "../data/pilotB_survey_responses.csv")
View(survey_responses)
enhancing_coded <- survey_responses %>%
filter(condition == "Enhancing")
enhancing_coded <- survey_responses %>%
filter(Condition == "Enhancing")
debilitating_coded <- survey_responses %>%
filter(Condition == "Debilitating")
# conduct the t-test
#t_test_result <- t.test(enhancing_coded$code_results, debilitating_code$code_results, alternative = "two.sided", var.equal #= FALSE)
View(enhancing_coded)
View(debilitating_coded)
View(open_responses)
#### Data exclusion:Filter out all the responses that have empty open responses or survey respondents that have no children
filtered_pilot <- pilot_data %>%
filter(Parent == 'Yes')  %>%
filter(Open_1 != ''|Open_2 != ''|Open_3 != '')
#label as either debilitating or enhancing condition
filtered_pilot <- filtered_pilot %>%
mutate(Condition = ifelse(is.na(Enhancing_1) | Enhancing_1 == "", "Debilitating", "Enhancing"))
### dataframe with only the open response questions
open_responses <- filtered_pilot %>%
select(ResponseId, Open_1, Open_2, Open_3)
write.csv(open_responses, "../data/pilotB_open_responses.csv")
### dataframe without the open response questions
survey_responses <- filtered_pilot %>%
select(-Open_1, -Open_2, -Open_3)
write.csv(survey_responses, "../data/pilotB_survey_responses.csv")
View(filtered_pilot)
View(open_responses)
#### Data exclusion:Filter out all the responses that have empty open responses or survey respondents that have no children
filtered_pilot <- pilot_data %>%
filter(Parent == 'Yes')  %>%
filter(Open_1 != ''|Open_2 != ''|Open_3 != '')
#label as either debilitating or enhancing condition
filtered_pilot <- filtered_pilot %>%
mutate(Condition = ifelse(is.na(Enhancing_1) | Enhancing_1 == "", "Debilitating", "Enhancing"))
### dataframe with only the open response questions
open_responses <- filtered_pilot %>%
select(ResponseId, Open_1, Open_2, Open_3, Condition)
write.csv(open_responses, "../data/pilotB_open_responses.csv")
### dataframe without the open response questions
survey_responses <- filtered_pilot %>%
select(-Open_1, -Open_2, -Open_3)
write.csv(survey_responses, "../data/pilotB_survey_responses.csv")
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data <- pilot_data[, -c(1:2)]
print(pilot_data.head)
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data <- pilot_data[, -c(1:2)]
pilot_data.head
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(knitr)
#### Import data as CSV
setwd("/Users/khaingmon/Desktop/haimovitz_rescue/data/")
pilot_data <- read.csv("PilotBData.csv", header = TRUE, sep = ",")
#get rid of survey meta data: first two rows and columns that include items like IP address + location, data only after 17th
pilot_data <- pilot_data[-c(1:20), ]
pilot_data <- pilot_data[, -c(3:8)]
pilot_data <- pilot_data[, -c(4:11)]
pilot_data <- pilot_data[, -c(1:2)]
#### Data exclusion:Filter out all the responses that have empty open responses or survey respondents that have no children
filtered_pilot <- pilot_data %>%
filter(Parent == 'Yes')  %>%
filter(Open_1 != ''|Open_2 != ''|Open_3 != '')
#label as either debilitating or enhancing condition
filtered_pilot <- filtered_pilot %>%
mutate(Condition = ifelse(is.na(Enhancing_1) | Enhancing_1 == "", "Debilitating", "Enhancing"))
### dataframe with only the open response questions
open_responses <- filtered_pilot %>%
select(ResponseId, Open_1, Open_2, Open_3, Condition) #should I remove condition here for blindness
write.csv(open_responses, "../data/pilotB_open_responses.csv")
### dataframe without the open response questions
survey_responses <- filtered_pilot %>%
select(-Open_1, -Open_2, -Open_3)
write.csv(survey_responses, "../data/pilotB_survey_responses.csv")
#### Data exclusion:Filter out all the responses that have empty open responses or survey respondents that have no children
filtered_pilot <- pilot_data %>%
filter(Parent == 'Yes')  %>%
filter(Open_1 != ''|Open_2 != ''|Open_3 != '')
#label as either debilitating or enhancing condition
filtered_pilot <- filtered_pilot %>%
mutate(Condition = ifelse(is.na(Enhancing_1) | Enhancing_1 == "", "Debilitating", "Enhancing"))
### dataframe with only the open response questions
open_responses <- filtered_pilot %>%
select(ResponseId, Open_1, Open_2, Open_3, Condition) #should I remove condition here for blindness
write.csv(open_responses, "../data/pilotB_open_responses.csv")
### dataframe without the open response questions
survey_responses <- filtered_pilot %>%
select(-Open_1, -Open_2, -Open_3)
write.csv(survey_responses, "../data/pilotB_survey_responses.csv")
enhancing_coded <- survey_responses %>%
filter(Condition == "Enhancing")
debilitating_coded <- survey_responses %>%
filter(Condition == "Debilitating")
# conduct the t-test
#t_test_result <- t.test(enhancing_coded$code_results, debilitating_code$code_results, alternative = "two.sided", var.equal #= FALSE)
